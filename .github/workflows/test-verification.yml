name: VeeR-EL2 verification

on:
  workflow_call:

jobs:
  tests:
    name: Verification tests
    runs-on: ubuntu-latest
    container: ghcr.io/antmicro/cores-veer-el2:20250103160559
    strategy:
      matrix:
        test: ["test_pyuvm"]
        coverage: ["branch", "toggle"] #TODO: add functional coverage
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CCACHE_DIR: "/opt/regression/.cache/"
    steps:
      - name: Setup repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install coverage dependencies
        shell: bash
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r .github/scripts/requirements-coverage.txt

      - name: Install prerequisities
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            autoconf automake autotools-dev \
            bc bison build-essential \
            ccache curl \
            flex \
            gawk gcc-riscv64-unknown-elf git gperf \
            help2man \
            libexpat-dev libfl-dev libfl2 libgmp-dev \
            libmpc-dev libmpfr-dev libpython3-all-dev libtool \
            ninja-build \
            patchutils python3 python3-dev python3-pip \
            texinfo \
            zlib1g zlib1g-dev

      - name: Setup environment
        shell: bash
        run: |
          echo "/opt/verilator/bin" >> $GITHUB_PATH
          RV_ROOT=`pwd`
          echo "RV_ROOT=$RV_ROOT" >> $GITHUB_ENV
          PYTHONUNBUFFERED=1
          echo "PYTHONUNBUFFERED=$PYTHONUNBUFFERED" >> $GITHUB_ENV
          TEST_PATH=$RV_ROOT/verification/top/${{ matrix.test }}
          echo "TEST_PATH=$TEST_PATH" >> $GITHUB_ENV


      - name: Run ${{ matrix.test }}
        shell: bash
        run: |
          source .venv/bin/activate
          pip3 install meson
          pip3 install -r $RV_ROOT/verification/top/requirements.txt
          PYTEST_STYLE_SRC_DIR=$RV_ROOT/.github/scripts/pytest/
          PYTEST_CSS=${PYTEST_STYLE_SRC_DIR}/css/styles.css
          HTML_FILE=${{ matrix.test }}_${{ matrix.COVERAGE }}.html
          pushd ${TEST_PATH}
            python -m pytest ${{ matrix.test }}.py -sv --coverage=${{ matrix.COVERAGE }} --html=$HTML_FILE --md=$GITHUB_STEP_SUMMARY --css=$PYTEST_CSS
            bash ${PYTEST_STYLE_SRC_DIR}/style_pytest_report.sh ${PYTEST_STYLE_SRC_DIR} ${TEST_PATH} ${HTML_FILE}
          popd

      - name: Prepare pytest-html data
        shell: bash
        run: |
          source .venv/bin/activate
          pushd $RV_ROOT
            WEBPAGE_DIR=webpage_${{ matrix.test }}_${{ matrix.COVERAGE }}
            mkdir -p $WEBPAGE_DIR
            mv ${TEST_PATH}/${{ matrix.test }}_${{ matrix.COVERAGE }}.html $WEBPAGE_DIR
            mv ${TEST_PATH}/assets $WEBPAGE_DIR
            JS_SCRIPT_DIR=$RV_ROOT/.github/scripts/pytest/script
            mv $JS_SCRIPT_DIR $WEBPAGE_DIR
          popd

      - name: Prepare coverage data
        shell: bash
        run: |
          source .venv/bin/activate
          export PATH=/opt/verilator/bin:$PATH
          sis -d convert --dat-dir ${TEST_PATH}
          mkdir -p results
          mv ${TEST_PATH}/coverage.info \
             results/coverage_${{ matrix.test }}_${{ matrix.coverage }}.info

      - name: Upload pytest-html artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: verification_dashboard
          path: |
            webpage_*

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: verification_tests_coverage_data
          path: results/*.info

  custom-verification-tests:
    name: Custom verification tests
    runs-on: [ self-hosted, Linux, X64, gcp-custom-runners ]
    container: centos:8
    strategy:
      matrix:
        bus: ["axi", "ahb"]
        test: ["test_pyuvm"]
    env:
      GHA_EXTERNAL_DISK: additional-tools
      GHA_SA: gh-sa-veer-uploader
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Run tests
        run: _secret_custom_verification_tests
        env:
          TEST: ${{ matrix.test }}
          BUS: ${{ matrix.bus }}
