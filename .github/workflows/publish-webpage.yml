name: GH-Pages Build and Main Deploy

on:
  workflow_call:

jobs:
  build:
    name: Build and Main Deploy
    concurrency:
      group: gh-pages
    runs-on: ubuntu-latest
    container:
      image: debian:trixie
    permissions:
      contents: write
    steps:
      - name: Setup repository
        uses: actions/checkout@v3

      - name: Print metadata
        run: |
          run_information="Repository: ${{ github.repository }} Commit SHA:${{ github.sha }} Workflow: ${{ github.workflow }} Run:${{ github.run_id }}"
          echo $run_information

      - name: Download coverage reports
        uses: actions/download-artifact@v3
        with:
          name: coverage_report
          path: ./coverage_dashboard

      - name: Download docs
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs_rendered

      - name: Download verification reports
        uses: actions/download-artifact@v3
        with:
          name: verification_dashboard
          path: ./verification_dashboard

      - name: Download RISCOF report
        uses: actions/download-artifact@v3
        with:
          name: riscof-report
          path: ./riscof_dashboard

      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: ./public.checkout

      - name: Preserve only valid items
        run: |
          mkdir -p ./public.new
          mv ./public.checkout/doctrees ./public.new/ | true
          mv ./public.checkout/html ./public.new/ | true

      - name: Update webpage
        if: github.event_name != 'pull_request'
        run: |
          apt -y update
          apt -y install nodejs npm python3 zip git

          mv coverage_dashboard/*.zip .

          # get coverview
          git clone https://github.com/antmicro/coverview
          cd coverview
          npm install
          npm run build
          unzip ../data.zip -d data
          python3 embed.py --inject-data data
          cd ../

          # dashboard
          rm -rf public.new/html/main/coverage_dashboard*
          mkdir -p public.new/html/main/coverage_dashboard/all
          cp -a coverview/dist/* public.new/html/main/coverage_dashboard/all

          #docs
          rm -rf public.new/html/main/docs_rendered
          mkdir -p public.new/html/main/docs_rendered
          mv ./docs_rendered/* public.new/html/main/docs_rendered

          # data
          mv data_*_verilator_info.zip public.new/html/main/
          mv data.zip public.new/html/main/
          mv data_v.zip public.new/html/main/
          mv data_both.zip public.new/html/main/
          echo ${GITHUB_RUN_ID} > public.new/html/main/run_id
          tar -acf webpage.tar.gz public.new

      - name: Update webpage PR
        if: github.event_name == 'pull_request'
        run: |
          apt -y update
          apt -y install nodejs npm python3 zip git

          mv coverage_dashboard/*.zip .

          # get coverview
          git clone https://github.com/antmicro/coverview
          cd coverview
          npm install
          npm run build
          unzip ../data.zip -d data
          python3 embed.py --inject-data data
          cd ../

          # dashboard
          rm -rf public.new/html/dev/${{ github.event.number }}/coverage_dashboard*
          mkdir -p public.new/html/dev/${{ github.event.number }}/coverage_dashboard/all
          cp -a coverview/dist/* public.new/html/dev/${{ github.event.number }}/coverage_dashboard/all

          # docs
          rm -rf public.new/html/dev/${{ github.event.number }}/docs_rendered
          mkdir -p public.new/html/dev/${{ github.event.number }}/docs_rendered
          mv ./docs_rendered/* public.new/html/dev/${{ github.event.number }}/docs_rendered

          # data
          mv data_*_verilator_info.zip public.new/html/dev/${{ github.event.number }}/
          mv data.zip public.new/html/dev/${{ github.event.number }}/
          mv data_v.zip public.new/html/dev/${{ github.event.number }}/
          mv data_both.zip public.new/html/dev/${{ github.event.number }}/
          echo ${GITHUB_RUN_ID} > public.new/html/dev/${{ github.event.number }}/run_id
          tar -acf webpage.tar.gz public.new

      - name: Add redirect index page
        run: |
          cp .github/scripts/indexgen/index_redirect/index.html ./public.new/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public.new

      - name: Save PR number
        if: github.event_name == 'pull_request'
        run: |
          echo "number=${{ github.event.number }}" >> pr_number.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: github.event_name == 'pull_request'
        with:
          name: pr_number
          path: ./pr_number.txt

      - name: Pack webpage as an artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: webpage
          path: ./webpage.tar.gz
